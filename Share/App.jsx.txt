// import "./App.css";
// import { BrowserRouter as Router, Route, Link, Routes } from "react-router-dom";
// import Home from "./pages/Home";
// import About from "./pages/About";
// import Contact from "./pages/Contact";
// import { useState } from "react";
// import Dashboard from "./pages/Dashboard";
// import ProtectedRoute from "./pages/ProtectedRoute";
// import PageNotFound from "./pages/PageNotFound";
// import Overview from "./pages/Overview";
// import Stats from "./pages/Stats";
// import Users from "./pages/Users";
// import UserDetails from "./pages/UserDetails";
// import Product from "./pages/Product";
// import AddProduct from "./pages/AddProduct";

// function App() {
//   const [isLoggedIn, setisLoggedIn] = useState(false);

//   const handleAuth = () => {
//     setisLoggedIn(!isLoggedIn);
//   };

//   return (
//     <Router>
//       <div className="App">
//         <nav className="topnav">
//           <div>
//             <ul>
//               <Link to="/">
//                 <li>Home</li>
//               </Link>
//               <Link to="/about">
//                 <li>About</li>
//               </Link>
//               <Link to="/contact">
//                 <li>Contact</li>
//               </Link>
//               <Link to="/product">
//                 <li>Product</li>
//               </Link>
//               {isLoggedIn && (
//                 <>
//                   <Link to="/dashboard">
//                     <li>Dashboard</li>
//                   </Link>
//                   <Link to="/user">
//                     <li>User Profile</li>
//                   </Link>
//                 </>
//               )}
//             </ul>
//             <button onClick={handleAuth}>
//               {isLoggedIn ? "Logout" : "Login"}
//             </button>
//           </div>
//         </nav>

//         <Routes>
//           <Route path="/" element={<Home />} />
//           <Route path="/about" element={<About />} />
//           <Route path="/contact" element={<Contact />} />
//           <Route path="/product" element={<Product />}>
//             <Route path="/product/add" element={<AddProduct />} />
//           </Route>
//           <Route path="*" element={<PageNotFound />} />
//           <Route
//             path="/dashboard/*"
//             element={
//               <ProtectedRoute
//                 element={<Dashboard />}
//                 isAuthenticated={isLoggedIn}
//               />
//             }
//           >
//             <Route path="overview" element={<Overview />} />
//             <Route path="stats" element={<Stats />} />
//           </Route>
//           <Route
//             path="/about"
//             element={
//               <ProtectedRoute
//                 element={<About />}
//                 isAuthenticated={isLoggedIn}
//               />
//             }
//           />
//           <Route
//             path="/user/*"
//             element={
//               <ProtectedRoute
//                 element={<Users />}
//                 isAuthenticated={isLoggedIn}
//               />
//             }
//           >
//             {/* <Route path="details/:userId/*" element={<UserDetails />} /> */}
//           </Route>

//           <Route
//             path="/user/details/:userId/*"
//             element={
//               <ProtectedRoute
//                 element={<UserDetails />}
//                 isAuthenticated={isLoggedIn}
//               />
//             }
//           ></Route>
//           {/* Tambahkan rute login jika perlu */}
//         </Routes>
//       </div>
//     </Router>
//   );
// }

// export default App;

import "./App.css";
import { createBrowserRouter, RouterProvider } from "react-router-dom";
import Home from "./pages/Home";
import About from "./pages/About";
import Contact from "./pages/Contact";
import { useState } from "react";
import Dashboard from "./pages/Dashboard";
import ProtectedRoute from "./pages/ProtectedRoute";
import PageNotFound from "./pages/PageNotFound";
import Overview from "./pages/Overview";
import Stats from "./pages/Stats";
import Users from "./pages/Users";
import UserDetails from "./pages/UserDetails";
import Product from "./pages/Product";
import AddProduct from "./pages/AddProduct";
import Layout from "./pages/Layout"; // Optional, to wrap navigation

function App() {
  const [isLoggedIn, setisLoggedIn] = useState(false);

  const handleAuth = () => {
    setisLoggedIn(!isLoggedIn);
  };

  // Define routes with createBrowserRouter
  const router = createBrowserRouter([
    {
      path: "/",
      element: <Layout isLoggedIn={isLoggedIn} handleAuth={handleAuth} />, // Layout for wrapping navigation and main content
      errorElement: <PageNotFound />,
      children: [
        { path: "/", element: <Home /> },
        {
          path: "/about",
          element: (
            <ProtectedRoute element={<About />} isAuthenticated={isLoggedIn} />
          ),
        },
        { path: "/contact", element: <Contact /> },
        {
          path: "/product",
          element: <Product />,
          children: [
            { path: "add", element: <AddProduct /> }, // Nested route for adding a product
          ],
        },
        {
          path: "/dashboard",
          element: (
            <ProtectedRoute
              element={<Dashboard />}
              isAuthenticated={isLoggedIn}
            />
          ),
          children: [
            { path: "overview", element: <Overview /> },
            { path: "stats", element: <Stats /> },
          ],
        },
        {
          path: "/user",
          element: (
            <ProtectedRoute element={<Users />} isAuthenticated={isLoggedIn} />
          ),
          children: [
            {
              path: "details/:userId",
              element: (
                <ProtectedRoute
                  element={<UserDetails />}
                  isAuthenticated={isLoggedIn}
                />
              ),
            },
          ],
        },
      ],
    },
    { path: "*", element: <PageNotFound /> }, // Catch-all route for 404
  ]);

  return <RouterProvider router={router} />;
}

export default App;
