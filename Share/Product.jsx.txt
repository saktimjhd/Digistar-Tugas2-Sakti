import { useState, useEffect } from "react";
import styles from "../cycle.module.css";
import { Outlet, Link } from "react-router-dom";

const Products = () => {
  const [loading, setLoading] = useState(false);
  const [products, setProducts] = useState([]);
  const [params, setParams] = useState({
    limit: 9,
    skip: 0,
  });

  useEffect(() => {
    const fetchProducts = async (params) => {
      const { limit = 9, skip = 0 } = params;
      try {
        setLoading(true);
        const result = await fetch(
          `https://dummyjson.com/products?limit=${limit}&skip=${skip}`
        );
        const data = await result.json();
        setProducts(data.products);
      } catch (error) {
        console.log("error > ", error);
      } finally {
        setLoading(false);
      }
    };

    fetchProducts(params);
  }, [params]);

  const handlePrev = () => {
    setParams((prevParams) => ({
      ...prevParams,
      skip: Math.max(prevParams.skip - 9, 0),
    }));
  };

  const handleNext = () => {
    setParams((prevParams) => ({
      ...prevParams,
      skip: prevParams.skip + 9,
    }));
  };

  return (
    <div className={styles.container}>
      <div className={styles.headingCon}>
        <h1 className={styles.heading}>PRODUCTS</h1>
        {/* Link to go to Add Product page */}
        <Link to="add" className={styles.btn}>
          Add New Product
        </Link>
      </div>

      {/* This is where nested routes will render (like AddProduct) */}
      <Outlet />

      {/* Conditionally show product list only if not adding new product */}
      {!loading && (
        <div>
          <div className={styles.productsContainer}>
            {products?.map((item, idx) => (
              <div key={idx} className={styles.productsItem}>
                <img
                  className={styles.productsItemCover}
                  src={item.images?.[0]}
                  alt={`product-cover-${idx}`}
                />
                <div className={styles.productsItemTitle}>
                  <p>{item.title}</p>
                </div>
              </div>
            ))}
          </div>
          <div className={styles.paginationContainer}>
            <button
              className={styles.btn}
              type="button"
              onClick={handlePrev}
              disabled={params.skip === 0}
            >
              Prev
            </button>
            <button className={styles.btn} type="button" onClick={handleNext}>
              Next
            </button>
          </div>
        </div>
      )}
    </div>
  );
};

export default Products;
